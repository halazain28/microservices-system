name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to main branch

jobs:
  # Build and push Docker images for each service
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push enter-data Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./enter-data
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/enter-data:latest

      - name: Build and push show-results Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./show-results
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/show-results:latest

      - name: Build and push authentication-service Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./authentication-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/authentication-service:latest

      - name: Build and push analytics-service Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./analytics-service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/analytics-service:latest

  # Optionally, you can add tests to ensure everything works before pushing
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          pip install -r enter-data/requirements.txt
          pip install -r show-results/requirements.txt
          pip install -r authentication-service/requirements.txt
          pip install -r analytics-service/requirements.txt

      - name: Run tests for enter-data service
        run: |
          # Add your test command here, for example using pytest
          pytest enter-data/tests

      - name: Run tests for show-results service
        run: |
          pytest show-results/tests

      - name: Run tests for authentication-service service
        run: |
          pytest authentication-service/tests

      - name: Run tests for analytics-service service
        run: |
          pytest analytics-service/tests

  # Deploy job - Optional (example for deploying using Docker Compose)
  deploy:
    runs-on: ubuntu-latest
    needs: build  # This job will only run after the build job succeeds

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Deploy using Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d

      - name: Wait for services to start (optional)
        run: sleep 30  # Wait for the services to be ready

      - name: Verify deployment (optional)
        run: |
          curl -s http://localhost:5000/enter # Test your API here
          curl -s http://localhost:5001/results # Test the results API
